"NeoBundle Scripts-----------------------------
if has('vim_starting')
  if &compatible
    set nocompatible               " Be iMproved
  endif

  " Required:
  set runtimepath+=/home/qba/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('/home/qba/.vim/bundle'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" Add or remove your Bundles here:
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'tpope/vim-commentary'
NeoBundle 'tpope/vim-bundler'
NeoBundle 'tpope/vim-rails'
NeoBundle 'tpope/vim-endwise'
NeoBundle 'tpope/vim-repeat'
NeoBundle 'tpope/vim-sleuth'
NeoBundle 'tpope/vim-surround'
NeoBundle 'sheerun/vim-polyglot'
NeoBundle 'Shougo/neosnippet.vim'
NeoBundle 'Shougo/neosnippet-snippets'
NeoBundle 'ctrlpvim/ctrlp.vim'
NeoBundle 'flazz/vim-colorschemes'
NeoBundle 'christoomey/vim-tmux-navigator'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'motemen/git-vim'
NeoBundle 'bling/vim-airline'
NeoBundle 'Townk/vim-autoclose'
NeoBundle 'ervandew/supertab'
NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'mmozuras/vim-github-comment'
NeoBundle 'mattn/webapi-vim'
NeoBundle 'skalnik/vim-vroom'
NeoBundle 'scrooloose/syntastic'
NeoBundle 'kchmck/vim-coffee-script'

" You can specify revision/branch/tag.
NeoBundle 'Shougo/vimshell', { 'rev' : '3787e5' }

" Required:
call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck
"End NeoBundle Scripts---------------

" Settings
set encoding=utf-8
syntax enable
set t_Co=256
let g:badwolf_darkgutter = 1
set background=dark
colorscheme badwolf
" jellybeans
set colorcolumn=81
let &colorcolumn=join(range(81,999),",")
" stop line breaking
set nowrap
" Turn off cursor blinking
set gcr=n:blinkon0
" nocompatible - break away from old vi compatibility
set nocp
" make backspace work like most other apps
set bs=indent,eol,start
" enable language-dependent indenting.
filetype plugin indent on
" line numbers
set number
" remove toolbar in gVIm
set go-=T
" TABBING
set expandtab       " Expand TABs to spaces
set softtabstop=2   " Sets the number of columns for a TAB
set shiftwidth=2    " Indents will have a width of 4
" The width of a TAB is set to 2.
" Still it is a \t. It is just that
" Vim will interpret it to be having
" a width of 4.
set tabstop=2
set hlsearch
" Split vertically to right
set splitright
" ignore case while search
set ic
"disable visual bell
set visualbell t_vb=
"statusline setup
set statusline=%f       "tail of the filename
"Git
set statusline+=%{fugitive#statusline()}
"store lots of :cmdline history
set history=1000

" EndSettings

" strip trailing whitespaces and keep new line at the end of file
if has("autocmd")
  " remove trailing white spaces
  autocmd BufWritePre * :%s/\s\+$//e
endif

"jump to last cursor position when opening a file
"dont do it when writing a commit log entry
autocmd BufReadPost * call SetCursorPosition()
function! SetCursorPosition()
    if &filetype !~ 'commit\c'
        if line("'\"") > 0 && line("'\"") <= line("$")
            exe "normal! g`\""
            normal! zz
        endif
    end
endfunction

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" vim-github-comment
let g:github_user = 'jcieslar'

" PeepOpen uses <Leader>p as well so you will need to redefine it so something
" else in your ~/.vimrc file, such as:
" nmap <silent> <Leader>q <Plug>PeepOpen
let mapleader = "\<Space>"
map <Leader>bp orequire'pry';binding.pry<esc>:w<cr>
map <Leader>c oconsole.log "", <esc>:w<cr>
map <Leader>l oRails.logger.info <esc>:w<cr>
map <Leader>lm oRails.logger.info "#####################################################################"<esc>:w<cr>
silent! nmap <silent> <Leader>p :NERDTreeToggle<CR>

" Open NERDTree in new tabs and windows if no command line args set
autocmd VimEnter * if !argc() | NERDTree | endif
autocmd BufEnter * if !argc() | NERDTreeMirror | endif
